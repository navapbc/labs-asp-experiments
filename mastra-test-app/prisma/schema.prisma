generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Participant {
  id                    String               @id @default(cuid())
  participantId         String               @unique
  firstName             String
  lastName              String?
  dateOfBirth           DateTime?
  homeAddress           String?
  mailingAddress        String?
  mobileNumber          String?
  canReceiveTexts       Boolean              @default(false)
  preferredLanguage     String               @default("English")
  email                 String?
  benefitsReceiving     String?
  onProbation           Boolean?
  isVeteran             Boolean?
  relationshipStatus    String?
  sexAtBirth            String?
  genderIdentity        String?
  ethnicity             String?
  race                  String?
  hasMediCal            Boolean              @default(false)
  mediCalCaseNumber     String?
  mediCalAmount         Decimal?
  isPregnant            Boolean?
  isPostPartum          Boolean?
  isInfantBreastfeeding Boolean?
  isInfantFormula       Boolean?
  hasChildren0to5       Boolean?
  hasDependents         Boolean?
  monthlyIncome         Decimal?
  occupation            String?
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
  household             HouseholdDependent[]

  @@map("participants")
}

model HouseholdDependent {
  id            String      @id @default(cuid())
  participantId String
  firstName     String
  lastName      String?
  age           Int?
  dateOfBirth   DateTime?
  relationship  String?
  sexAtBirth    String?
  genderIdentity String?
  ethnicity     String?
  race          String?
  isInfant      Boolean?
  isChild0to5   Boolean?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  participant   Participant @relation(fields: [participantId], references: [id], onDelete: Cascade)

  @@map("household_dependents")
}

model PlaywrightArtifact {
  id        String   @id @default(cuid())
  sessionId String
  fileName  String
  fileType  String   // 'screenshot' | 'trace' | 'session' | 'other'
  mimeType  String
  size      Int
  content   Bytes
  metadata  Json     @default("{}")
  traceId   String?
  threadId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([sessionId])
  @@index([fileType])
  @@index([traceId])
  @@index([createdAt])
  @@map("mastra_artifacts")
}

