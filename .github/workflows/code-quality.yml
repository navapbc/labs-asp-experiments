name: Code Quality & Standards

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check PR title format
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            fix
            feat
            docs
            style
            refactor
            perf
            test
            chore
            ci
          requireScope: false
          disallowScopes: |
            release
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.

  file-changes:
    name: Detect File Changes
    runs-on: ubuntu-latest
    outputs:
      typescript: ${{ steps.changes.outputs.typescript }}
      markdown: ${{ steps.changes.outputs.markdown }}
      yaml: ${{ steps.changes.outputs.yaml }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            typescript:
              - '**/*.ts'
              - '**/*.tsx'
              - '**/*.js'
              - '**/*.jsx'
            markdown:
              - '**/*.md'
            yaml:
              - '**/*.yml'
              - '**/*.yaml'

  lint-typescript:
    name: Lint TypeScript/JavaScript
    runs-on: ubuntu-latest
    needs: file-changes
    if: needs.file-changes.outputs.typescript == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: |
          if [ -f "package.json" ]; then
            npm ci
          fi
          # Check each project directory
          if [ -d "mastra-agent-app" ] && [ -f "mastra-agent-app/package.json" ]; then
            cd mastra-agent-app && npm ci && cd ..
          fi
          if [ -d "mastra-test-app" ] && [ -f "mastra-test-app/package.json" ]; then
            cd mastra-test-app && npm ci && cd ..
          fi
      - name: Run linting
        run: |
          # Run eslint in each project if available
          if [ -d "mastra-agent-app" ]; then
            cd mastra-agent-app && npm run lint --if-present && cd ..
          fi
          if [ -d "mastra-test-app" ]; then
            cd mastra-test-app && npm run lint --if-present && cd ..
          fi

  lint-markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest
    needs: file-changes
    if: needs.file-changes.outputs.markdown == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          globs: '**/*.md'
          config: |
            {
              "line-length": false,
              "no-inline-html": false
            }

  validate-yaml:
    name: Validate YAML
    runs-on: ubuntu-latest
    needs: file-changes
    if: needs.file-changes.outputs.yaml == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Validate YAML files
        uses: ibiqlik/action-yamllint@v3
        with:
          config_data: |
            extends: default
            rules:
              line-length:
                max: 120
              indentation:
                spaces: 2
              truthy:
                allowed-values: ['true', 'false']

  security-check:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Run security audit
        run: |
          # Check each project for security vulnerabilities
          if [ -d "mastra-agent-app" ] && [ -f "mastra-agent-app/package.json" ]; then
            cd mastra-agent-app && npm audit --audit-level=high && cd ..
          fi
          if [ -d "mastra-test-app" ] && [ -f "mastra-test-app/package.json" ]; then
            cd mastra-test-app && npm audit --audit-level=high && cd ..
          fi 